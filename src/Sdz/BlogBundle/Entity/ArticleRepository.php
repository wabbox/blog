<?php

namespace Sdz\BlogBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends EntityRepository
{
	public function myFindAll()
	{
		return $this->createQueryBuilder('a')
		             ->getQuery()
		             ->getResult();
	}

	public function myFindOne($id)
	{
		// On passe par le QueryBuilder vide de l'EntityManager pour l'exemple
		$qb = $this->createQueryBuilder('a');

		$qb->where('a.id = :id')
		     ->setParameter('id', $id);

		return $qb->getQuery()
		           ->getResult();
	}

	public function findByAuteurAndDate($auteur, $annee)
	{
		// On utilise le QueryBuilder créé par le repository directement pour gagner du temps
		// Plus besoin de faire le select() ni le from() par la suite donc
		$qb = $this->createQueryBuilder('a');

		$qb->where('a.auteur = :auteur')
		     ->setParameter('auteur', $auteur)
		   ->andWhere('a.date < :annee')
		     ->setParameter('annee', $annee)
		   ->orderBy('a.date', 'DESC');

		return $qb->getQuery()
		           ->getResult();
	}

	public function findCinqDerniers($nombre){
		$qb = $this->createQueryBuilder('a');

		$qb->orderBy('a.date', 'DESC')
		   ->setMaxResults($nombre);
		return $qb->getQuery()
		           ->getResult();
	}
	public function whereCurrentYear(\Doctrine\ORM\QueryBuilder $qb)
	{
		$qb->andWhere('a.date BETWEEN :debut AND :fin')
		   ->setParameter('debut', new \Datetime(date('Y').'-01-01'))  // Date entre le 1er janvier de cette année
		   ->setParameter('fin',   new \Datetime(date('Y').'-12-31')); // Et le 31 décembre de cette année

		return $qb;
	}

	public function getArticleAvecCommentaires()
	{
		$qb = $this->createQueryBuilder('a')
		           ->leftJoin('a.commentaires', 'c')
		           ->addSelect('c');

		return $qb->getQuery()
		           ->getResult();
	}
}
